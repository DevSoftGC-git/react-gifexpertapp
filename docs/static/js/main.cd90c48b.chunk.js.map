{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAGPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDlB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAQrB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAESA,GADAA,EAAIC,eE1B5BgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,UAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAMQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCrBlC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cd90c48b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // validar que el valor ingresado no venga vacio\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=SIQm59IG9HgfoJ9pOlHe3WxVyfzDJD02`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../Helpers/getGifs';\n\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    \n    // useEffect( () => {\n    //     getGifs( category ).then( setImages )\n    // }, [ category ]);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                <ol>\n                    {\n                        images.map( img => (\n\n                            <GifGridItem \n                                key={img.id}\n                                { ...img }\n                            />\n\n                        ))\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n","// Los Hooks No necesitan importar React\n\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../Helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        // Llama al Helper getGifs\n        getGifs( category )\n            .then( imgs => {\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n                \n            });\n        \n    }, [category]);\n\n    return state; // { data:[], loading: true};\n\n}","import React, { useState } from \"react\";\nimport { AddCategory } from \"./Components/AddCategory\";\nimport { GifGrid } from \"./Components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Nueve']);\n\n    // Añadimos un nuevo elemento al arreglo a traves de setCategories\n    // const handleAdd = () => {\n    //     setCategories( [...categories, 'Júpiter'] );\n    // }\n\n    return(\n\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                { \n                    // categories.map( category => {\n                    //     return <li key={ category }> { category } </li>\n                    // })\n\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                    \n                }\n            </ol>\n        </>\n\n    )\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}